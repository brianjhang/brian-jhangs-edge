---
export const prerender = true;

import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import Breadcrumb from '../../components/Breadcrumb.astro';
import RelatedArticles from '../../components/RelatedArticles.astro';
import Comments from '../../components/Comments.astro';
import { calculateReadingTime, formatReadingTime } from '../../utils/readingTime.js';

export async function getStaticPaths() {
  const cryptoPosts = await getCollection('crypto');
  return cryptoPosts.map((post) => ({
    params: { slug: post.slug }, 
    props: post,
  }));
}

const post = Astro.props;
const { Content } = await post.render();

// 計算動態閱讀時間
const dynamicReadingTime = calculateReadingTime(post.body);

const title = post.data.title;
const description = post.data.description || post.data.summary;
// 動態生成 ogImage 路徑
function generateOgImagePath(slug, image, seoOgImage) {
  // 如果 frontmatter 中有設定 image，優先使用
  if (image) {
    return image;
  }
  
  // 如果 SEO 中有設定，次優先使用
  if (seoOgImage) {
    return seoOgImage;
  }
  
  // 特殊映射規則 - 舊檔案位置
  const slugMappings = {
    'btc/complete-guide': 'bitcoin-complete-guide.png',
    'eth/complete-guide': 'ethereum-complete-guide.png',
    'sol/complete-guide': 'solana-complete-guide.png',
    'bnb/complete-guide': 'bnb-complete-guide.png',
    'usdt/complete-guide': 'usdt-complete-guide.png',
    'usdc/complete-guide': 'usdc-complete-guide.png',
    'xrp/complete-guide': 'xrp-complete-guide.png',
    'doge/complete-guide': 'doge-complete-guide.png',
    'ada/complete-guide': 'cardano-complete-guide.png'
  };
  
  // 如果有特殊映射，使用映射
  if (slugMappings[slug]) {
    return `/images/og/crypto/${slugMappings[slug]}`;
  }
  
  // 新規則：保持目錄結構，按照實際檔案路徑
  if (slug.includes('/')) {
    const parts = slug.split('/');
    const filename = `${parts[1]}.png`; // 只使用檔案名稱，不加前綴
    return `/images/og/crypto/${parts[0]}/${filename}`;
  }
  
  // 預設規則：用 slug 生成檔名
  const fileName = slug.replace('/', '-') + '.png';
  return `/images/og/crypto/${fileName}`;
}

const ogImage = generateOgImagePath(post.slug, post.data.image, post.data.seo?.ogImage);

// 生成麵包屑
const breadcrumbItems = [
  { title: '幣圈筆記', url: '/crypto' },
  { title: post.data.title.split('：')[0] || post.data.title.split('|')[0] || post.data.title }
];
---

<Layout 
  title={title}
  series="crypto"
  description={description}
  image={ogImage}
>
  <main>
    <div class="content-wrap">
      <Breadcrumb items={breadcrumbItems} category="crypto" />
      
      <h1 class="page-title">{post.data.title}</h1>
      
      <div class="meta">
        <span>📅 {post.data.date}</span>
        {post.data.difficulty && <span class="difficulty" data-level={post.data.difficulty}>{post.data.difficulty === 'beginner' ? '入門' : post.data.difficulty === 'intermediate' ? '中階' : '進階'}</span>}
        {post.data.category && <span class="category">{post.data.category}</span>}
        <span>⏱️ {formatReadingTime(dynamicReadingTime)}閱讀</span>
      </div>
      
      {post.data.tags && (
        <div class="tags">
          {post.data.tags.slice(0, 5).map((tag) => (
            <span class="tag">#{tag.toUpperCase()}</span>
          ))}
        </div>
      )}
      
      <article>
        <Content />
      </article>
      
      <!-- 相關文章推薦 -->
      <RelatedArticles
        currentSlug={post.slug}
        currentCategory="crypto"
        currentTags={post.data.tags}
        maxItems={3}
      />

      <!-- 評論系統 -->
      <Comments
        title={post.data.title}
        category="crypto"
      />
    </div>
  </main>
</Layout>

<style>
  :root {
    --crypto: #f59e0b;
    --shadow-hover: 0 8px 25px rgba(245, 158, 11, 0.15);
  }

  .content-wrap {
    max-width: 800px;
    margin: 0 auto;
    padding: 40px 20px;
  }


  .page-title {
    font-size: 2.5rem;
    font-weight: 700;
    color: var(--brand);
    margin-bottom: 24px;
    line-height: 1.2;
  }

  .meta {
    display: flex;
    gap: 16px;
    margin-bottom: 40px;
    flex-wrap: wrap;
    align-items: center;
    font-size: 0.875rem;
    color: var(--muted);
  }

  /* .difficulty 樣式已在 global.css 中定義 */
  
  .difficulty[data-level="beginner"] {
    background: rgba(34, 197, 94, 0.1);
    color: #22c55e;
    border: 1px solid rgba(34, 197, 94, 0.2);
  }
  
  .difficulty[data-level="intermediate"] {
    background: rgba(251, 191, 36, 0.1);
    color: #fbbf24;
    border: 1px solid rgba(251, 191, 36, 0.2);
  }
  
  .difficulty[data-level="advanced"] {
    background: rgba(239, 68, 68, 0.1);
    color: #ef4444;
    border: 1px solid rgba(239, 68, 68, 0.2);
  }

  /* .category 樣式已在 global.css 中定義 */
  
  .tags {
    display: flex;
    gap: 8px;
    flex-wrap: wrap;
    margin-top: 16px;
    margin-bottom: 24px;
  }
  
  /* .tag 樣式已在 global.css 中定義 */

  article {
    color: var(--brand);
    line-height: 1.8;
    font-size: 1.1rem;
  }

  article h1, article h2, article h3, article h4, article h5, article h6 {
    color: var(--brand);
    margin: 32px 0 16px 0;
    font-weight: 600;
  }

  article h1 { font-size: 2rem; }
  article h2 { font-size: 1.75rem; }
  article h3 { font-size: 1.5rem; }
  article h4 { font-size: 1.25rem; }

  article p {
    margin: 16px 0;
    color: #e5e7eb;
  }

  article a {
    color: var(--crypto);
    text-decoration: none;
    border-bottom: 1px solid transparent;
    transition: all 0.2s ease;
  }

  article a:hover {
    color: #fbbf24;
    border-bottom-color: #fbbf24;
  }

  article ul, article ol {
    margin: 16px 0;
    padding-left: 24px;
  }

  article li {
    margin: 8px 0;
    color: #e5e7eb;
  }

  article blockquote {
    border-left: 4px solid var(--crypto);
    padding: 16px 24px;
    margin: 24px 0;
    background: rgba(245, 158, 11, 0.1);
    border-radius: 0 8px 8px 0;
    font-style: italic;
  }

  article code {
    background: var(--card);
    padding: 2px 6px;
    border-radius: 4px;
    font-family: 'Monaco', 'Menlo', monospace;
    font-size: 0.9em;
    color: var(--crypto);
  }

  article pre {
    background: var(--card);
    padding: 20px;
    border-radius: 8px;
    overflow-x: auto;
    margin: 24px 0;
    border: 1px solid var(--border);
  }

  article pre code {
    background: none;
    padding: 0;
    color: #e5e7eb;
  }
  
  /* 代碼區塊左邊距修復 - 針對所有代碼區塊 */
  article pre {
    padding: 20px 20px 20px 28px !important;
  }
  
  /* 強制覆蓋所有代碼區塊的內聯樣式 */
  article pre[class*="astro-code"] {
    padding-left: 28px !important;
  }
  
  /* 最強優先級修復 */
  .content-wrap article pre.astro-code.github-dark {
    padding-left: 28px !important;
    box-sizing: border-box !important;
  }
  
  article pre code {
    background: none;
    padding: 0;
    color: #e5e7eb;
  }
  
  /* 最強力的CSS修復 - 直接針對所有 .line 元素 */
  :global(.line) {
    padding-left: 8px !important;
  }
  
  :global(.line span) {
    padding-left: 0 !important;
  }
  
  /* 額外的備用選擇器 */
  :global(pre .line) {
    padding-left: 8px !important;
  }
  
  :global(code .line) {
    padding-left: 8px !important;
  }
  
  /* 純文字代碼區塊 */
  article pre:not(.astro-code) {
    padding-left: 28px !important;
  }
  
  article pre[class*="astro-code"] .line span {
    padding-left: 0 !important;
  }

  article img {
    max-width: 100%;
    height: auto;
    border-radius: 8px;
    margin: 24px 0;
  }

  article table {
    width: 100%;
    border-collapse: collapse;
    margin: 24px 0;
  }

  article th, article td {
    border: 1px solid var(--border);
    padding: 12px;
    text-align: left;
  }

  article th {
    background: var(--card);
    font-weight: 600;
    color: var(--crypto);
  }

  @media (max-width: 768px) {
    .content-wrap {
      padding: 20px 16px;
    }
    
    .page-title {
      font-size: 2rem;
    }
    
    .meta {
      font-size: 0.8rem;
      gap: 12px;
    }
    
    article {
      font-size: 1rem;
    }
    
    article h1 { font-size: 1.75rem; }
    article h2 { font-size: 1.5rem; }
    article h3 { font-size: 1.25rem; }
  }
</style>