---
export const prerender = true;

import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import Breadcrumb from '../../components/Breadcrumb.astro';
import RelatedArticles from '../../components/RelatedArticles.astro';
import SocialShare from '../../components/SocialShare.astro';
import Comments from '../../components/Comments.astro';
import { calculateReadingTime, formatReadingTime } from '../../utils/readingTime.js';
import { extractEntityLinks, getEntityLinks } from '../../utils/entityMapping.js';
import { parseFAQ } from '../../utils/faqParser.js';

export async function getStaticPaths() {
  const startupPosts = await getCollection('startup');

  // 只為中文文章生成中文路由，嚴格排除英文文章
  const chinesePosts = startupPosts.filter(post => {
    const isEnglish = post.data.lang === 'en' || post.slug.endsWith('-en');
    return !isEnglish;
  });

  return chinesePosts.map((post) => {
    // 從 post.id 獲取完整路徑，包含子目錄
    // 例如: "book/ceo-loneliness-hard-things.mdx" -> "book/ceo-loneliness-hard-things"
    const fullPath = post.id.replace('.mdx', '');
    return {
      params: { slug: fullPath },
      props: post,
    };
  });
}

const post = Astro.props;
const { Content } = await post.render();

// 計算動態閱讀時間
const dynamicReadingTime = calculateReadingTime(post.body);

const title = post.data.title;
const description = post.data.description || post.data.summary;

// 動態生成 ogImage 路徑 - 完全對應目錄結構
function generateOgImagePath(slug, image, seoOgImage, series) {
  // 如果 frontmatter 中有設定 image，優先使用
  if (image) {
    return image;
  }
  
  // 如果 SEO 中有設定，次優先使用
  if (seoOgImage) {
    return seoOgImage;
  }
  
  // 根據 slug 生成完整路徑，保持目錄結構一致
  // 例如: concepts/ai-native-lean-startup-pgv -> /images/og/startup/concepts/ai-native-lean-startup-pgv.webp
  const pathParts = slug.split('/');
  const fileName = pathParts[pathParts.length - 1] + '.png'; // 取最後一部分作為檔名
  const dirPath = pathParts.slice(0, -1).join('/'); // 取除了最後一部分的路徑
  
  if (dirPath) {
    return `/images/og/${series}/${dirPath}/${fileName}`;
  } else {
    return `/images/og/${series}/${fileName}`;
  }
}

const ogImage = generateOgImagePath(post.id.replace('.mdx', ''), post.data.image, post.data.seo?.ogImage, 'startup');

// 提取實體關聯
const entityLinks = extractEntityLinks(post.data.tags);

// 解析 FAQ 內容
const faqSchema = parseFAQ(post.body, post.data.title);

// 生成麵包屑
const breadcrumbItems = [
  { title: '創業筆記', url: '/startup' },
  { title: post.data.title.split('：')[0] || post.data.title.split('|')[0] || post.data.title }
];
---

<Layout
  title={title}
  series="startup"
  description={description}
  image={ogImage}
>
  <!-- Article Schema JSON-LD -->
  <script type="application/ld+json" set:html={JSON.stringify({
    "@context": "https://schema.org",
    "@type": "Article",
    "headline": post.data.title,
    "description": post.data.description || post.data.summary,
    "image": ogImage.startsWith('http') ? ogImage : `https://brianjhang.com${ogImage}`,
    "articleBody": post.body,
    "wordCount": post.body.length,
    "articleSection": ["創業", post.data.category || "筆記"],
    "about": entityLinks.length > 0 ? entityLinks.map(entity => ({
      "@type": "Thing",
      "name": entity.name,
      "sameAs": entity.sameAs
    })) : post.data.tags?.slice(0, 3).map(tag => ({
      "@type": "Thing",
      "name": tag
    })) || [{"@type": "Thing", "name": "創業"}],
    "author": {
      "@type": "Person",
      "name": "Brian Jhang",
      "url": "https://brianjhang.com",
      "sameAs": "https://brianjhang.com/about"
    },
    "publisher": {
      "@type": "Person",
      "name": "Brian Jhang",
      "url": "https://brianjhang.com"
    },
    "datePublished": post.data.publishedDate || `${post.data.date}T00:00:00+08:00`,
    "dateModified": post.data.modifiedDate || `${post.data.updated || post.data.date}T00:00:00+08:00`,
    "mainEntityOfPage": {
      "@type": "WebPage",
      "@id": post.data.canonicalUrl || `https://brianjhang.com/startup/${post.slug}`
    },
    "inLanguage": "zh-TW",
    "isAccessibleForFree": true,
    "genre": ["Business", "Entrepreneurship", "Education"],
    "keywords": post.data.tags?.join(", ") || "創業,商業",
    "educationalLevel": post.data.difficulty === 'beginner' ? '入門' : post.data.difficulty === 'intermediate' ? '中階' : '進階',
    "readingTime": `PT${Math.ceil(dynamicReadingTime)}M`,
    "copyrightHolder": {
      "@type": "Person",
      "name": "Brian Jhang"
    },
    "copyrightYear": new Date(post.data.date).getFullYear(),
    "license": "https://creativecommons.org/licenses/by/4.0/"
  })} />

  <!-- HowTo Schema for tutorial articles -->
  {post.data.type === 'tutorial' || post.body.includes('步驟') || post.body.includes('如何') ? (
    <script type="application/ld+json" set:html={JSON.stringify({
      "@context": "https://schema.org",
      "@type": "HowTo",
      "name": post.data.title,
      "description": post.data.description || post.data.summary,
      "image": ogImage.startsWith('http') ? ogImage : `https://brianjhang.com${ogImage}`,
      "totalTime": `PT${Math.ceil(dynamicReadingTime)}M`,
      "estimatedCost": {
        "@type": "MonetaryAmount",
        "currency": "TWD",
        "value": "0"
      },
      "supply": [
        {
          "@type": "HowToSupply",
          "name": "創業計劃"
        }
      ],
      "tool": [
        {
          "@type": "HowToTool",
          "name": "商業分析工具"
        }
      ]
    })} />
  ) : null}

  <!-- Enhanced FAQ Schema with detailed Q&A pairs -->
  {faqSchema ? (
    <script type="application/ld+json" set:html={JSON.stringify(faqSchema)} />
  ) : null}
  <main>
    <div class="content-wrap">
      <Breadcrumb items={breadcrumbItems} category="startup" />
      
      <h1 class="page-title">{post.data.title}</h1>
      
      <div class="meta">
        <span>📅 {post.data.date}</span>
        {post.data.difficulty && <span class="difficulty" data-level={post.data.difficulty}>{post.data.difficulty === 'beginner' ? '入門' : post.data.difficulty === 'intermediate' ? '中階' : '進階'}</span>}
        {post.data.category && <span class="category">{post.data.category}</span>}
        <span>⏱️ {formatReadingTime(dynamicReadingTime)}閱讀</span>
      </div>
      
      {post.data.tags && (
        <div class="tags">
          {post.data.tags.slice(0, 5).map((tag) => (
            <span class="tag">#{tag.toUpperCase()}</span>
          ))}
        </div>
      )}
      
      <article>
        <Content />
      </article>

      <!-- 社交分享 -->
      <SocialShare
        title={post.data.title}
        url={post.data.canonicalUrl || `https://brianjhang.com/startup/${post.id.replace('.mdx', '')}`}
        description={post.data.description || post.data.summary}
      />

      <!-- 相關文章推薦 -->
      <RelatedArticles
        currentSlug={post.slug}
        currentCategory="startup"
        currentTags={post.data.tags}
        maxItems={3}
      />

      <!-- 評論系統 -->
      <Comments
        title={post.data.title}
        category="startup"
      />
    </div>
  </main>
</Layout>

<style>
  :root {
    --startup: #10b981;
    --shadow-hover: 0 8px 25px rgba(16, 185, 129, 0.15);
  }

  .content-wrap {
    max-width: 800px;
    margin: 0 auto;
    padding: 40px 20px;
  }


  .page-title {
    font-size: 2.5rem;
    font-weight: 700;
    color: var(--brand);
    margin-bottom: 24px;
    line-height: 1.2;
  }

  .meta {
    display: flex;
    gap: 16px;
    margin-bottom: 40px;
    flex-wrap: wrap;
    align-items: center;
    font-size: 0.875rem;
    color: var(--muted);
  }

  /* .difficulty 樣式已在 global.css 中定義 */
  
  .difficulty[data-level="beginner"] {
    background: rgba(34, 197, 94, 0.1);
    color: #22c55e;
    border: 1px solid rgba(34, 197, 94, 0.2);
  }
  
  .difficulty[data-level="intermediate"] {
    background: rgba(16, 185, 129, 0.1);
    color: #10b981;
    border: 1px solid rgba(16, 185, 129, 0.2);
  }
  
  .difficulty[data-level="advanced"] {
    background: rgba(239, 68, 68, 0.1);
    color: #ef4444;
    border: 1px solid rgba(239, 68, 68, 0.2);
    font-size: 0.75rem;
    font-weight: 600;
  }

  /* .category 樣式已在 global.css 中定義 */
  
  .tags {
    display: flex;
    gap: 8px;
    flex-wrap: wrap;
    margin-top: 16px;
    margin-bottom: 24px;
  }
  
  /* .tag 樣式已在 global.css 中定義 */

  article {
    color: var(--brand);
    line-height: 1.8;
    font-size: 1.1rem;
  }

  article h1, article h2, article h3, article h4, article h5, article h6 {
    color: var(--brand);
    margin: 32px 0 16px 0;
    font-weight: 600;
  }

  article h1 { font-size: 2rem; }
  article h2 { font-size: 1.75rem; }
  article h3 { font-size: 1.5rem; }
  article h4 { font-size: 1.25rem; }

  article p {
    margin: 16px 0;
    color: #e5e7eb;
  }

  article a {
    color: var(--startup);
    text-decoration: none;
    border-bottom: 1px solid transparent;
    transition: all 0.2s ease;
  }

  article a:hover {
    color: #34d399;
    border-bottom-color: #34d399;
  }

  article ul, article ol {
    margin: 16px 0;
    padding-left: 24px;
  }

  article li {
    margin: 8px 0;
    color: #e5e7eb;
  }

  article blockquote {
    border-left: 4px solid var(--startup);
    padding: 16px 24px;
    margin: 24px 0;
    background: rgba(16, 185, 129, 0.1);
    border-radius: 0 8px 8px 0;
    font-style: italic;
  }

  article code {
    background: var(--card);
    padding: 2px 6px;
    border-radius: 4px;
    font-family: 'Monaco', 'Menlo', monospace;
    font-size: 0.9em;
    color: var(--startup);
  }

  article pre {
    background: var(--card);
    padding: 20px;
    border-radius: 8px;
    overflow-x: auto;
    margin: 24px 0;
    border: 1px solid var(--border);
  }

  article pre code {
    background: none;
    padding: 0;
    color: #e5e7eb;
  }
  
  /* 代碼區塊左邊距修復 - 針對所有代碼區塊 */
  article pre {
    padding: 20px 20px 20px 28px !important;
  }
  
  /* 強制覆蓋所有代碼區塊的內聯樣式 */
  article pre[class*="astro-code"] {
    padding-left: 28px !important;
  }
  
  article pre code {
    background: none;
    padding: 0;
    color: #e5e7eb;
  }
  
  /* 最強力的CSS修復 - 直接針對所有 .line 元素 */
  :global(.line) {
    padding-left: 8px !important;
  }
  
  :global(.line span) {
    padding-left: 0 !important;
  }
  
  /* 額外的備用選擇器 */
  :global(pre .line) {
    padding-left: 8px !important;
  }
  
  :global(code .line) {
    padding-left: 8px !important;
  }
  
  /* 純文字代碼區塊 */
  article pre:not(.astro-code) {
    padding-left: 28px !important;
  }
  
  article pre[class*="astro-code"] .line span {
    padding-left: 0 !important;
  }

  article img {
    max-width: 100%;
    height: auto;
    border-radius: 8px;
    margin: 24px 0;
  }

  article table {
    width: 100%;
    border-collapse: collapse;
    margin: 24px 0;
  }

  article th, article td {
    border: 1px solid var(--border);
    padding: 12px;
    text-align: left;
  }

  article th {
    background: var(--card);
    font-weight: 600;
    color: var(--startup);
  }

  @media (max-width: 768px) {
    .content-wrap {
      padding: 20px 16px;
    }
    
    .page-title {
      font-size: 2rem;
    }
    
    .meta {
      font-size: 0.8rem;
      gap: 12px;
    }
    
    article {
      font-size: 1rem;
    }
    
    article h1 { font-size: 1.75rem; }
    article h2 { font-size: 1.5rem; }
    article h3 { font-size: 1.25rem; }
  }
</style>